// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebTemplate.Models;

#nullable disable

namespace WebTemplate.Migrations
{
    [DbContext(typeof(IspitContext))]
    partial class IspitContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebTemplate.Models.Karta", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<long>("BrojSedista")
                        .HasColumnType("bigint");

                    b.Property<long>("Red")
                        .HasColumnType("bigint");

                    b.Property<bool>("Rezervisana")
                        .HasColumnType("bit");

                    b.Property<int?>("projekcijaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("projekcijaID");

                    b.ToTable("Karte");
                });

            modelBuilder.Entity("WebTemplate.Models.Projekcija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<long>("OsnovnaCenaKarte")
                        .HasColumnType("bigint");

                    b.Property<string>("Sifra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VremePrikazivanja")
                        .HasColumnType("datetime2");

                    b.Property<int?>("salaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("salaID");

                    b.ToTable("Projekcije");
                });

            modelBuilder.Entity("WebTemplate.Models.Sala", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.ToTable("Sale");
                });

            modelBuilder.Entity("WebTemplate.Models.Karta", b =>
                {
                    b.HasOne("WebTemplate.Models.Projekcija", "projekcija")
                        .WithMany("Karte")
                        .HasForeignKey("projekcijaID");

                    b.Navigation("projekcija");
                });

            modelBuilder.Entity("WebTemplate.Models.Projekcija", b =>
                {
                    b.HasOne("WebTemplate.Models.Sala", "sala")
                        .WithMany("projekcije")
                        .HasForeignKey("salaID");

                    b.Navigation("sala");
                });

            modelBuilder.Entity("WebTemplate.Models.Projekcija", b =>
                {
                    b.Navigation("Karte");
                });

            modelBuilder.Entity("WebTemplate.Models.Sala", b =>
                {
                    b.Navigation("projekcije");
                });
#pragma warning restore 612, 618
        }
    }
}
